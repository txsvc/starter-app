apiVersion: v1
kind: List
items:
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: postgresql
      labels:
        app: starter-app
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              namespace: openshift
              name: 'postgresql:12-el8'
        
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        name: postgresql
      
      template:
        metadata:
          name: postgresql
          labels:
            name: postgresql
        spec:
          volumes:
            - name: starter-app-pg-data
              persistentVolumeClaim:
                claimName: starter-app-pg
          
          containers:
            - name: postgresql
              
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: starter-app-secrets
                      key: database-user
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: starter-app-secrets
                      key: database-password
                - name: POSTGRESQL_DATABASE
                  value: root
                - name: POSTGRESQL_MAX_CONNECTIONS
                  value: '100'
                - name: POSTGRESQL_SHARED_BUFFERS
                  value: 12MB

              resources:
                limits:
                  memory: 512Mi
              
              volumeMounts:
                - name: starter-app-pg-data
                  mountPath: /var/lib/pgsql/data
          
              ports:
                - containerPort: 5432
                  protocol: TCP
              
              readinessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              
              livenessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                    - '--live'
                initialDelaySeconds: 120
                timeoutSeconds: 10
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3

              terminationMessagePath: /dev/termination-log
              imagePullPolicy: IfNotPresent    
              terminationMessagePolicy: File
              
              #image: >-
              #  image-registry.openshift-image-registry.svc:5000/openshift/postgresql
          
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler

  - kind: Service
    apiVersion: v1
    metadata:
      name: postgresql
      labels:
        app: starter-app
    spec:
      ipFamilies:
        - IPv4
      ports:
        - name: postgresql
          protocol: TCP
          port: 5432
          targetPort: 5432
      internalTrafficPolicy: Cluster
      type: ClusterIP
      ipFamilyPolicy: SingleStack
      sessionAffinity: None
      selector:
        name: postgresql

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: starter-app-pg
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: starter-app
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: gp2
      volumeMode: Filesystem