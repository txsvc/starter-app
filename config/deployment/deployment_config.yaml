apiVersion: v1
kind: List
items:
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: starter-app
      labels:
        app: starter-app
        app.kubernetes.io/component: starter-app
        app.kubernetes.io/instance: starter-app
        app.kubernetes.io/name: starter-app
        app.openshift.io/runtime: ruby
        app.openshift.io/runtime-version: 3.0-ubi7
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
          pre:
            failurePolicy: Abort
            execNewPod:
              command:
                - ./bin/rollout.sh
              containerName: starter-app
        resources: {}
        activeDeadlineSeconds: 21600
      
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - starter-app
            from:
              kind: ImageStreamTag
              name: 'starter-app:latest'
        - type: ConfigChange
      
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      
      selector:
        app: starter-app
      template:
        metadata:
          labels:
            app: starter-app
        spec:
          containers:
            - name: starter-app
              image: starter-app:latest
              
              env:
                - name: RAILS_ENV
                  value: production
                - name: RAILS_MASTER_KEY
                  valueFrom:
                    secretKeyRef:
                      name: starter-app-secrets
                      key: rails-master-key
                - name: RAILS_SERVE_STATIC_FILES
                  valueFrom:
                    configMapKeyRef:
                      name: starter-app-deployment-config-map
                      key: rails-serve-static-files
                
                - name: DATABASE_SERVICE_NAME
                  value: postgresql

                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: starter-app-secrets
                      key: database-user
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: starter-app-secrets
                      key: database-password
                - name: POSTGRESQL_DATABASE
                  value: root
                - name: POSTGRESQL_MAX_CONNECTIONS
                  value: '100'
                - name: POSTGRESQL_SHARED_BUFFERS
                  value: 12MB
                
                # unset RAKE_DB_MIGRATE to avoid rake db:migrate running on a pod rollout
                - name: RAKE_DB_MIGRATE
                  value: 'yes'
                #- name: RAKE_EXTRA_TASKS
                #  value: '--tasks'

              resources:
                limits:
                  memory: 512Mi
              #    cpu: "2"
              #  requests:
              #    cpu: "1"
              #    memory: 4Gi
              
              #readinessProbe:
              #  httpGet:
              #    path: /articles
              #    port: 8080
              #    scheme: HTTP
              #  initialDelaySeconds: 5
              #  timeoutSeconds: 3
              #  periodSeconds: 10
              #  successThreshold: 1
              #  failureThreshold: 3

              #livenessProbe:
              #  httpGet:
              #    path: /articles
              #    port: 8080
              #    scheme: HTTP
              #  initialDelaySeconds: 10
              #  timeoutSeconds: 3
              #  periodSeconds: 10
              #  successThreshold: 1
              #  failureThreshold: 3
              
              ports:
                - containerPort: 8080
                  protocol: TCP
              
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler

  - kind: Service
    apiVersion: v1
    metadata:
      name: starter-app
      labels:
        app: starter-app
        app.kubernetes.io/component: starter-app
        app.kubernetes.io/instance: starter-app
        app.kubernetes.io/name: starter-app
        app.openshift.io/runtime: ruby
        app.openshift.io/runtime-version: 3.0-ubi7
    spec:
      ipFamilies:
        - IPv4
      ports:
        - name: 8080-web
          protocol: TCP
          port: 8080
          targetPort: 8080
      internalTrafficPolicy: Cluster
      type: ClusterIP
      ipFamilyPolicy: SingleStack
      sessionAffinity: None
      selector:
        app: starter-app
        deploymentconfig: starter-app

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: starter-app
      labels:
        app: starter-app
        app.kubernetes.io/component: starter-app
        app.kubernetes.io/instance: starter-app
        app.kubernetes.io/name: starter-app
        app.openshift.io/runtime: ruby
        app.openshift.io/runtime-version: 3.0-ubi7
    spec:
      to:
        kind: Service
        name: starter-app
        weight: 100
      port:
        targetPort: 8080-web
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None